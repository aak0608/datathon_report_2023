---
title: "ETC3250/5250 Assignment 2"
author: "Aishwarya Anil Kumar"
date: "2024-04-12"
quarto-required: ">=1.3.0"
execute: 
  warning: false
  message: false
format:
    html:
        output-file: assign02-submission.html
        css: "assignment.css"
---

<!-- Guide to using quarto at https://quarto.org/docs/get-started/hello/rstudio.html -->

```{r warning=FALSE, message=FALSE}
library(tidyverse)
library(boot)
library(kableExtra)
```

## Exercises

#### 1. Bootstrapping your way to provide evidence (8pts)

In this question, we are interested in bootstrapping the variables from `NotOut` to `FiveWickets` to find the statistics that are contributing to PC1.
```{r echo=FALSE}
cricket <- read_csv("auswt20.csv")
#cricket_pca <- prcomp(cricket[,6:22], center=TRUE, scale=TRUE)
#cricket_pca

set.seed(848) 
added_noise1 <- runif(54, -0.1, 0.1) 
added_noise2 <- runif(54, -0.1, 0.1) 
auswt20_adj <- cricket |> 
  mutate(FiveWickets = FiveWickets+added_noise1, 
         Hundreds = Hundreds+added_noise2)
```

```{r echo=FALSE, warning=FALSE, message=FALSE}
compute_PC1 <- function(data, index) {
  pc1 <- prcomp(data[index,], center=TRUE, scale=TRUE)$rotation[,1]
  if (sign(pc1[1]) < 0) 
    pc1 <- -pc1
  return(pc1)
}
# Make sure sign of first PC element is positive
set.seed(201)
PC1_boot <- boot(data=auswt20_adj[,6:22], compute_PC1, R=1000)
colnames(PC1_boot$t) <- colnames(auswt20_adj[,6:22])
PC1_boot_ci <- as_tibble(PC1_boot$t) %>%
  gather(var, coef) %>% 
  mutate(var = factor(var, levels=c("NotOuts", "Runs", "HighScore", "Average", "BallsFaced", "StrikeRate", "Hundreds", "Fifties", "Ducks", "Fours", "Sixes", "Overs", "Maidens", "Wickets", "Economy", "FourWickets", "FiveWickets"))) %>%
  group_by(var) %>%
  summarise(q2.5 = quantile(coef, 0.025), 
            q5 = median(coef),
            q97.5 = quantile(coef, 0.975)) %>%
  mutate(observed_value = PC1_boot$t0) 

```

```{r echo=FALSE, warning=FALSE, message=FALSE}
#| label: tbl-pc1
#| tbl-cap: Tabular representation of statistical data for PC1
kable(PC1_boot_ci, digits = 2, align = "r") %>%
  kable_styling(full_width = T) %>%
  row_spec(0, color = "white", background = "#4C72B0", bold = TRUE) %>%
  column_spec(1, width = "2.5em", color = "white", background = "#4C72B0") %>%
  column_spec(1:5, width = "3em") %>%
  row_spec(3, bold = FALSE)
```

```{r echo=FALSE, warning=FALSE, message=FALSE}
#| label: fig-pc1
#| fig-cap: Visual representation of variation in coefficient in PC1 after bootstrapping
pb <- ggplot(PC1_boot_ci, aes(x=var, y=observed_value)) + 
  geom_hline(yintercept=0, linetype=2, colour="red") +
  geom_point() +
  geom_errorbar(aes(ymin=q2.5, ymax=q97.5), width=0.1) +
  xlab("") + ylab("coefficient") + theme(axis.text.x = element_text(angle = 30))
pb
```

[In @fig-pc1, Confidence intervals for `Average`,  `Overs`, `Maidens`, `Wickets`, `Economy`, `FourWickets` and `FiveWickets` cross ZERO, hence zero is a plausible value for the population coefficient corresponding to this estimate. This also means that the variance in these variables cannot be effectively explained by PC1. On the other hand, we see that rest other variables such as `Runs`, `HighScore`, `BallsFaced` and so on are the terms related to battling in a cricket match. The variance in these variables seem to be explained by PC1.]{.smaller}



We are interested in bootstrapping the variables from `NotOut` to `FiveWickets` to find the statistics that are contributing to PC2.
```{r echo=FALSE, warning=FALSE, message=FALSE}
compute_PC2 <- function(data, index) {
  pc2 <- prcomp(data[index,], center=TRUE, scale=TRUE)$rotation[,2]
  if (sign(pc2[1]) < 0) 
    pc2 <- -pc2 
  return(pc2)
}
# Make sure sign of first PC element is positive
set.seed(201)
PC2_boot <- boot(data=auswt20_adj[,6:22], compute_PC2, R=1000)
colnames(PC2_boot$t) <- colnames(auswt20_adj[,6:22])
PC2_boot_ci <- as_tibble(PC2_boot$t) %>%
  gather(var, coef) %>% 
  mutate(var = factor(var, levels=c("NotOuts", "Runs", "HighScore", "Average", "BallsFaced", "StrikeRate", "Hundreds", "Fifties", "Ducks", "Fours", "Sixes", "Overs", "Maidens", "Wickets", "Economy", "FourWickets", "FiveWickets"))) %>%
  group_by(var) %>%
  summarise(q2.5 = quantile(coef, 0.025), 
            q5 = median(coef),
            q97.5 = quantile(coef, 0.975)) %>%
  mutate(estimate = PC2_boot$t0) 

```
```{r echo=FALSE, warning=FALSE, message=FALSE}
#| label: tbl-pc2
#| tbl-cap: Tabular representation of statistical data for PC2
kable(PC2_boot_ci, digits = 2, align = "r") %>%
  kable_styling(full_width = T) %>%
  row_spec(0, color = "white", background = "#4C72B0", bold = TRUE) %>%
  column_spec(1, width = "2.5em", color = "white", background = "#4C72B0") %>%
  column_spec(1:5, width = "3em") %>%
  row_spec(3, bold = FALSE)
```

```{r echo=FALSE, warning=FALSE, message=FALSE}
#| label: fig-pc2
#| fig-cap: Visual representation of variation in coefficient in PC2 after bootstrapping
pb <- ggplot(PC2_boot_ci, aes(x=var, y=estimate)) + 
  geom_hline(yintercept=0, linetype=2, colour="red") +
  geom_point() +
  geom_errorbar(aes(ymin=q2.5, ymax=q97.5), width=0.1) +
  xlab("") + ylab("coefficient") + theme(axis.text.x = element_text(angle = 30))
pb
```

[In @fig-pc2, Confidence intervals for all the variables except `NotOuts` cross ZERO, hence zero is a plausible value for the population coefficient corresponding to this estimate. This also means that almost none of the variance in coefficients can be explained by PC2 which was not the case previously. Earlier we were able to explain the variables related to bowling in a cricket match but upon sampling the data 1000 times using bootstrapping, it seems that that was the case for just 1 or few such samples and not for all samples as assumed previously]{.smaller}

```{r echo=FALSE}
#| out-width: 100%
#| fig-width: 6
#| fig-height: 6
pb
```


#### 2. How is your thinking about simple classifiers? (10pts)

YOUR ANSWER HERE

#### 3. How well can you build a simple classifier? (18pts)

YOUR ANSWER HERE

## References

Hadley Wickham, Dianne Cook, Heike Hofmann, Andreas Buja
  (2011). tourr: An R Package for Exploring Multivariate
  Data with Projections. Journal of Statistical Software,
  40(2), 1-18. URL http://www.jstatsoft.org/v40/i02/.
  
Kuhn et al., (2020). Tidymodels: a collection of
  packages for modeling and machine learning using
  tidyverse principles. https://www.tidymodels.org  
  
OpenAI (2023). ChatGPT (version 3.5) [Large language model]. https://chat.openai.com/chat, full script of conversation [here]( https://chat.openai.com/share/746c4f77-9b7b-4c3b-867a-826f639b91aa)